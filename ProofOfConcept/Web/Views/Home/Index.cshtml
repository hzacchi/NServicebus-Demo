@{
    ViewBag.Title = "Index";
}

<style>
    .section {height:250px} 
    .clear {clear:both}
    
    #packout { float: left;width: 47.5%}
    #scrap { float: right;width: 47.5%}

    ul {list-style-type: none}
    ul li { float: left;height: 25px;background-color: gray;margin: 0px 2px 2px 0px;color: white;text-align: center;padding: 2px 2px 0px 2px}
    ul li.pending {opacity:0.25;}
    ul li.passed {background-color: green}
    ul li.failed {background-color: red}
    ul li.assembling { border: dashed 1px blue;background-color: white; color: blue}
</style>

<fieldset id="wip" class="section">
    <legend>Wip Release</legend>
    <section>
        <input type="checkbox" id="enableWipRelease" checked="checked" /> Next Wip Released In: <span id="timer"></span> seconds
    </section>
    <ul></ul>
    <div class="clear"></div>
</fieldset>


<fieldset id="assemble" class="section">
    <legend>Assemble</legend>
    <ul></ul>
    <div class="clear"></div> 
</fieldset>


<fieldset id="packout" class="section">
    <legend>Packout</legend>
    <ul></ul>
    <div class="clear"></div>
</fieldset>


<fieldset id="scrap" class="section">
    <legend>Scrap</legend>
    <ul></ul>
    <div class="clear"></div>
</fieldset>
 
<div class="clear"></div>

<script src="~/scripts/jquery-1.6.4.js" type="text/javascript"></script>
<script src="~/scripts/jquery.signalR-2.0.0-beta2.js" type="text/javascript"></script>
<script src="~/signalr/hubs"></script>
<script type="text/javascript">

    var router = $.connection.routingHub;


    router.client.wipReleased = function (data) {
        //console.log('wipReleased', data);
        moveTo("#assemble", data.WipId);
        $("ul li#" + data.WipId).addClass("pending");
    };

    router.client.assembleStarted = function (data) {
        console.log('assembleStarted', data);
        $("ul li#" + data.WipId).addClass("assembling");
    };

    router.client.assemblePassed = function (data) {
        //console.log('assemblePassed', data);
        $("ul li#" + data.WipId).addClass('passed').addClass('pending').removeClass("assembling");
        moveTo("#packout", data.WipId);
    };

    router.client.assembleFailed = function (data) {
        //console.log('assembleFailed', data);
        $("ul li#" + data.WipId).addClass('failed').addClass('pending').removeClass("assembling");
        moveTo("#scrap", data.WipId);
    };

    router.client.wipMovedToAssemble = function (data) {
        //console.log('wipMovedToAssemble', data);
        $("ul li#" + data.WipId).removeClass("pending");
    }; 

    router.client.wipMovedToPackout = function (data) {
        //console.log('wipMovedToPackout', data);
        $("ul li#" + data.WipId).removeClass("pending");
    };

    router.client.wipMovedToScrap = function (data) {
        //console.log('wipMovedToScrap', data);
        $("ul li#" + data.WipId).removeClass("pending");
    };

    router.client.wipPacked = function (data) {
        //console.log('wipPacked', data);
        remove("#packout", data.WipId);
    };

    router.client.wipScrapped = function (data) {
        //console.log('wipScrapped', data);
        remove("#scrap", data.WipId);
    };

    $.connection.hub.start()
        .done(function() { console.log('Now connected, connection ID=' + $.connection.hub.id); })
        .fail(function () {
            console.log('Could not Connect!');
        });
  

    $(function () { 
        releaseWipTimer(); 
    });
     
    var wipReleaseTimer = 1;
    function releaseWipTimer() {
        var enabled = $("#enableWipRelease").is(":checked");
         
        if (enabled) {
            $('#timer').html(wipReleaseTimer);
        }
        
        if (wipReleaseTimer == 0) {
            if (enabled) {
                releaseWip();
            }
            if (enabled) {
                wipReleaseTimer = 1;
            }
        } else {
            if (enabled) {
                wipReleaseTimer--;
            }
        }
        
        setTimeout('releaseWipTimer()', 1000);
    }

    function releaseWip() { 
        $.post('/api/wip', {}, function (id) { 
            var li = $('<li>' + id + "</li>");
            li.attr("id", id);
            $('#wip ul').append(li);
        });
    }

    function moveTo(container, id) {
        var li = $("ul li#" + id);
        li.remove();
        $('ul', container).append(li);
    }

    function remove(container, id) {
        var li = $("ul li#" + id);
        li.fadeOut(); 
    }
</script>